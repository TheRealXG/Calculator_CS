/** 
* Note:  This file is was generated by the GTRI IDL Compiler.
* This file should not be edited directly, if errors are found,
* please contact the individual listed below.
* 
* Developer:  Marcus Quettan
* Email: marcus.quettan@gtri.gatech.edu
*
**/

#ifndef _FACE_TSS_BASE_H
#define _FACE_TSS_BASE_H
#include <FACE/types.h>
#include <FACE/interface.h>
#include <FACE/sequence.h>
#include <FACE/string.h>
#include <FACE/fixed.h>
#include <FACE/TSS/Common.h>

/* Interface FACE_TSS_Base Begin */
struct FACE_TSS_Base;

// initialize this_obj->data
typedef FACE_interface_return (*FACE_TSS_Base_ctor_t)(struct FACE_TSS_Base* this_obj);

// clean up this_obj->data
typedef FACE_interface_return (*FACE_TSS_Base_dtor_t)(struct FACE_TSS_Base* this_obj);

// 1. typedef defining alias for function pointer
//    corresponding to operation
typedef FACE_interface_return (*FACE_TSS_Base_Initialize_t)(struct FACE_TSS_Base* this_obj, const FACE_CONFIGURATION_RESOURCE* configuration, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_TSS_Base_Create_Connection_t)(struct FACE_TSS_Base* this_obj, const FACE_TSS_CONNECTION_NAME_TYPE* connection_name, FACE_TIMEOUT_TYPE timeout, FACE_TSS_CONNECTION_ID_TYPE* connection_id, FACE_TSS_MESSAGE_SIZE_TYPE* max_message_size, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_TSS_Base_Destroy_Connection_t)(struct FACE_TSS_Base* this_obj, FACE_TSS_CONNECTION_ID_TYPE connection_id, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_TSS_Base_Unregister_Callback_t)(struct FACE_TSS_Base* this_obj, FACE_TSS_CONNECTION_ID_TYPE connection_id, FACE_RETURN_CODE_TYPE* return_code);

typedef struct FACE_TSS_Base_ops {
  FACE_TSS_Base_ctor_t ctor;
  FACE_TSS_Base_dtor_t dtor;
  
  // 2. operations table struct members corresponding to the operations
  FACE_TSS_Base_Initialize_t Initialize;
  FACE_TSS_Base_Create_Connection_t Create_Connection;
  FACE_TSS_Base_Destroy_Connection_t Destroy_Connection;
  FACE_TSS_Base_Unregister_Callback_t Unregister_Callback;
} FACE_TSS_Base_ops;

typedef struct FACE_TSS_Base {
  FACE_TSS_Base_ops ops;
  void* data;
} FACE_TSS_Base;

#define FACE_TSS_Base_ctor(_this_obj) \
  ((_this_obj)->ops.ctor)((_this_obj))
#define FACE_TSS_Base_dtor(_this_obj) \
  ((_this_obj)->ops.dtor)((_this_obj))

// 3. Macros corresponding to the operations
#define FACE_TSS_Base_Initialize(_this_obj, _configuration, _return_code) \
  ((_this_obj)->ops.Initialize)((_this_obj), (_configuration), (_return_code))

#define FACE_TSS_Base_Create_Connection(_this_obj, _connection_name, _timeout, _connection_id, _max_message_size, _return_code) \
  ((_this_obj)->ops.Create_Connection)((_this_obj), (_connection_name), (_timeout), (_connection_id), (_max_message_size), (_return_code))

#define FACE_TSS_Base_Destroy_Connection(_this_obj, _connection_id, _return_code) \
  ((_this_obj)->ops.Destroy_Connection)((_this_obj), (_connection_id), (_return_code))

#define FACE_TSS_Base_Unregister_Callback(_this_obj, _connection_id, _return_code) \
  ((_this_obj)->ops.Unregister_Callback)((_this_obj), (_connection_id), (_return_code))

/* Interface FACE_TSS_Base End */


#endif // _FACE_TSS_BASE_H
