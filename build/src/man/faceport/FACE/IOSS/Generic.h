/** 
* Note:  This file is was generated by the GTRI IDL Compiler.
* This file should not be edited directly, if errors are found,
* please contact the individual listed below.
* 
* Developer:  Marcus Quettan
* Email: marcus.quettan@gtri.gatech.edu
*
**/

#ifndef _FACE_IOSS_GENERIC_H
#define _FACE_IOSS_GENERIC_H
#include <FACE/types.h>
#include <FACE/interface.h>
#include <FACE/sequence.h>
#include <FACE/string.h>
#include <FACE/fixed.h>
#include <FACE/IOSS/IOS.h>

#define FACE_IOSS_Generic_MAX_BYTE_COUNT ((FACE_unsigned_short)65535)
typedef FACE_sequence FACE_IOSS_Generic_BYTE_SEQUENCE;
#define FACE_IOSS_Generic_BYTE_SEQUENCE_bound_value ((FACE_unsigned_long) FACE_IOSS_Generic_MAX_BYTE_COUNT)

#define FACE_IOSS_Generic_BYTE_SEQUENCE_init_managed_unbounded(_seq) \
  FACE_sequence_init_managed_unbounded((_seq), sizeof(FACE_octet))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_init_managed_bounded(_seq, _bound) \
  FACE_sequence_init_managed_bounded((_seq), sizeof(FACE_octet), (_bound))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_init_managed_copy(_seq, _src) \
  FACE_sequence_init_managed_copy((_seq), (_src))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_init_managed_data(_seq, _arr, _length) \
  FACE_sequence_init_managed_data((_seq), (_arr), sizeof(FACE_octet), (_length))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_init_unmanaged(_seq, _src, _length, _bound) \
  FACE_sequence_init_unmanaged( \
    (_seq), (_src), sizeof(FACE_octet), (_length), (_bound))
    
#define FACE_IOSS_Generic_BYTE_SEQUENCE_free(_seq) \
  FACE_sequence_free((_seq))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_clear(_seq) \
  FACE_sequence_clear((_seq))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_append(_seq, _src) \
  FACE_sequence_append((_seq), (_src))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_at(_seq, _index) \
  (FACE_octet *) FACE_sequence_at((_seq), (_index))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_buffer(_seq) \
  (FACE_octet *) FACE_sequence_buffer((_seq))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_length(_seq, _length) \
  FACE_sequence_length((_seq), (_length))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_capacity(_seq, _capacity) \
  FACE_sequence_capacity((_seq), (_capacity))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_bound(_seq, _bound) \
  FACE_sequence_bound((_seq), (_bound))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_is_managed(_seq, _is_managed) \
  FACE_sequence_is_managed((_seq), (_is_managed))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_is_bounded(_seq, _is_bounded) \
  FACE_sequence_is_bounded((_seq), (_is_bounded))
  
#define FACE_IOSS_Generic_BYTE_SEQUENCE_is_valid(_seq, _is_valid) \
  FACE_sequence_is_valid((_seq), (_is_valid))
  

/* Struct FACE_IOSS_Generic_ReadWriteBuffer Begin */
typedef struct FACE_IOSS_Generic_ReadWriteBuffer {
  FACE_IOSS_Generic_BYTE_SEQUENCE data;
} FACE_IOSS_Generic_ReadWriteBuffer;
/* Struct FACE_IOSS_Generic_ReadWriteBuffer End */
#define FACE_IOSS_Generic_ADDRESS ((FACE_IOSS_IO_PARAMETER_ID_TYPE)0)
#define FACE_IOSS_Generic_MIN_VALUE ((FACE_IOSS_IO_PARAMETER_ID_TYPE)1)
#define FACE_IOSS_Generic_MAX_VALUE ((FACE_IOSS_IO_PARAMETER_ID_TYPE)2)
#define FACE_IOSS_Generic_INIT_VALUE ((FACE_IOSS_IO_PARAMETER_ID_TYPE)3)
#define FACE_IOSS_Generic_PRECISION ((FACE_IOSS_IO_PARAMETER_ID_TYPE)4)
typedef FACE_STRING_TYPE FACE_IOSS_Generic_CONNECTION_NAME_TYPE;

/* Enum FACE_IOSS_Generic_IO_CONNECTION_STATUS_TYPE Begin */
typedef enum FACE_IOSS_Generic_IO_CONNECTION_STATUS_TYPE {
  FACE_IOSS_Generic_IO_CONNECTION_STATUS_TYPE_NOT_OPEN,
  FACE_IOSS_Generic_IO_CONNECTION_STATUS_TYPE_CONNECTING,
  FACE_IOSS_Generic_IO_CONNECTION_STATUS_TYPE_READY,
  FACE_IOSS_Generic_IO_CONNECTION_STATUS_TYPE_BUSY,
  FACE_IOSS_Generic_IO_CONNECTION_STATUS_TYPE_DEGRADED
} FACE_IOSS_Generic_IO_CONNECTION_STATUS_TYPE;
/* Enum FACE_IOSS_Generic_IO_CONNECTION_STATUS_TYPE End */

/* Struct FACE_IOSS_Generic_CONNECTION_STATUS_TYPE Begin */
typedef struct FACE_IOSS_Generic_CONNECTION_STATUS_TYPE {
  FACE_SYSTEM_TIME_TYPE last_message_time;
  FACE_boolean message_available;
  FACE_IOSS_Generic_IO_CONNECTION_STATUS_TYPE connection_status;
} FACE_IOSS_Generic_CONNECTION_STATUS_TYPE;
/* Struct FACE_IOSS_Generic_CONNECTION_STATUS_TYPE End */

/* Enum FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE Begin */
typedef enum FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE {
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_SHORT,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_LONG,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_LONGLONG,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_USHORT,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_ULONG,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_ULONGLONG,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_FLOAT,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_DOUBLE,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_LONGDOUBLE,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_CHAR,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_BOOLEAN,
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_OCTET
} FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE;
/* Enum FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE End */

/* Union FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPE Begin */
typedef struct FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPE {
  enum FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE discriminator;
  union {
    FACE_short short_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_SHORT
    FACE_long long_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_LONG
    FACE_long_long longlong_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_LONGLONG
    FACE_unsigned_short ushort_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_USHORT
    FACE_unsigned_long ulong_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_ULONG
    FACE_unsigned_long_long ulonglong_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_ULONGLONG
    FACE_float float_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_FLOAT
    FACE_double double_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_DOUBLE
    FACE_long_double longdouble_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_LONGDOUBLE
    FACE_char char_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_CHAR
    FACE_boolean boolean_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_BOOLEAN
    FACE_octet octet_value; // FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPES_TYPE_FACE_OCTET
  } values;
} FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPE;
/* Union FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPE End */

/* Struct FACE_IOSS_Generic_IO_PARAMETER Begin */
typedef struct FACE_IOSS_Generic_IO_PARAMETER {
  FACE_IOSS_IO_PARAMETER_ID_TYPE id;
  FACE_IOSS_Generic_IO_PARAMETER_VALUE_TYPE value;
} FACE_IOSS_Generic_IO_PARAMETER;
/* Struct FACE_IOSS_Generic_IO_PARAMETER End */
typedef FACE_sequence FACE_IOSS_Generic_IO_PARAMETER_LIST;
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_bound_value FACE_SEQUENCE_UNBOUNDED_SENTINEL

#define FACE_IOSS_Generic_IO_PARAMETER_LIST_init_managed_unbounded(_seq) \
  FACE_sequence_init_managed_unbounded((_seq), sizeof(FACE_IOSS_Generic_IO_PARAMETER))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_init_managed_bounded(_seq, _bound) \
  FACE_sequence_init_managed_bounded((_seq), sizeof(FACE_IOSS_Generic_IO_PARAMETER), (_bound))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_init_managed_copy(_seq, _src) \
  FACE_sequence_init_managed_copy((_seq), (_src))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_init_managed_data(_seq, _arr, _length) \
  FACE_sequence_init_managed_data((_seq), (_arr), sizeof(FACE_IOSS_Generic_IO_PARAMETER), (_length))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_init_unmanaged(_seq, _src, _length, _bound) \
  FACE_sequence_init_unmanaged( \
    (_seq), (_src), sizeof(FACE_IOSS_Generic_IO_PARAMETER), (_length), (_bound))
    
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_free(_seq) \
  FACE_sequence_free((_seq))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_clear(_seq) \
  FACE_sequence_clear((_seq))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_append(_seq, _src) \
  FACE_sequence_append((_seq), (_src))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_at(_seq, _index) \
  (FACE_IOSS_Generic_IO_PARAMETER *) FACE_sequence_at((_seq), (_index))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_buffer(_seq) \
  (FACE_IOSS_Generic_IO_PARAMETER *) FACE_sequence_buffer((_seq))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_length(_seq, _length) \
  FACE_sequence_length((_seq), (_length))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_capacity(_seq, _capacity) \
  FACE_sequence_capacity((_seq), (_capacity))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_bound(_seq, _bound) \
  FACE_sequence_bound((_seq), (_bound))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_is_managed(_seq, _is_managed) \
  FACE_sequence_is_managed((_seq), (_is_managed))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_is_bounded(_seq, _is_bounded) \
  FACE_sequence_is_bounded((_seq), (_is_bounded))
  
#define FACE_IOSS_Generic_IO_PARAMETER_LIST_is_valid(_seq, _is_valid) \
  FACE_sequence_is_valid((_seq), (_is_valid))
  

/* Struct FACE_IOSS_Generic_IO_PARAMETER_TRANSACTION_TYPE Begin */
typedef struct FACE_IOSS_Generic_IO_PARAMETER_TRANSACTION_TYPE {
  FACE_GUID_TYPE guid;
  FACE_IOSS_Generic_IO_PARAMETER_LIST items;
} FACE_IOSS_Generic_IO_PARAMETER_TRANSACTION_TYPE;
/* Struct FACE_IOSS_Generic_IO_PARAMETER_TRANSACTION_TYPE End */
#define FACE_IOSS_Generic_NO_WAIT ((FACE_TIMEOUT_TYPE)0)
#define FACE_IOSS_Generic_WAIT_FOREVER ((FACE_TIMEOUT_TYPE)-1)

/* Enum FACE_IOSS_Generic_NOTIFICATION_EVENT_TYPE Begin */
typedef enum FACE_IOSS_Generic_NOTIFICATION_EVENT_TYPE {
  FACE_IOSS_Generic_NOTIFICATION_EVENT_TYPE_DATA_READ_EVENT,
  FACE_IOSS_Generic_NOTIFICATION_EVENT_TYPE_CONNECTION_CONFIG_CHANGE_EVENT,
  FACE_IOSS_Generic_NOTIFICATION_EVENT_TYPE_CONNECTION_STATUS_CHANGE_EVENT,
  FACE_IOSS_Generic_NOTIFICATION_EVENT_TYPE_BUS_CONFIG_CHANGE_EVENT,
  FACE_IOSS_Generic_NOTIFICATION_EVENT_TYPE_BUS_STATUS_CHANGE_EVENT
} FACE_IOSS_Generic_NOTIFICATION_EVENT_TYPE;
/* Enum FACE_IOSS_Generic_NOTIFICATION_EVENT_TYPE End */

/* Interface FACE_IOSS_Generic_IO_Callback Begin */
struct FACE_IOSS_Generic_IO_Callback;

// initialize this_obj->data
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Callback_ctor_t)(struct FACE_IOSS_Generic_IO_Callback* this_obj);

// clean up this_obj->data
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Callback_dtor_t)(struct FACE_IOSS_Generic_IO_Callback* this_obj);

// 1. typedef defining alias for function pointer
//    corresponding to operation
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Callback_Process_Notification_Event_t)(struct FACE_IOSS_Generic_IO_Callback* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_IOSS_Generic_NOTIFICATION_EVENT_TYPE notification_event);

typedef struct FACE_IOSS_Generic_IO_Callback_ops {
  FACE_IOSS_Generic_IO_Callback_ctor_t ctor;
  FACE_IOSS_Generic_IO_Callback_dtor_t dtor;
  
  // 2. operations table struct members corresponding to the operations
  FACE_IOSS_Generic_IO_Callback_Process_Notification_Event_t Process_Notification_Event;
} FACE_IOSS_Generic_IO_Callback_ops;

typedef struct FACE_IOSS_Generic_IO_Callback {
  FACE_IOSS_Generic_IO_Callback_ops ops;
  void* data;
} FACE_IOSS_Generic_IO_Callback;

#define FACE_IOSS_Generic_IO_Callback_ctor(_this_obj) \
  ((_this_obj)->ops.ctor)((_this_obj))
#define FACE_IOSS_Generic_IO_Callback_dtor(_this_obj) \
  ((_this_obj)->ops.dtor)((_this_obj))

// 3. Macros corresponding to the operations
#define FACE_IOSS_Generic_IO_Callback_Process_Notification_Event(_this_obj, _handle, _notification_event) \
  ((_this_obj)->ops.Process_Notification_Event)((_this_obj), (_handle), (_notification_event))

/* Interface FACE_IOSS_Generic_IO_Callback End */

/* Interface FACE_IOSS_Generic_IO_Service Begin */
struct FACE_IOSS_Generic_IO_Service;

// initialize this_obj->data
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_ctor_t)(struct FACE_IOSS_Generic_IO_Service* this_obj);

// clean up this_obj->data
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_dtor_t)(struct FACE_IOSS_Generic_IO_Service* this_obj);

// 1. typedef defining alias for function pointer
//    corresponding to operation
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Initialize_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, const FACE_CONFIGURATION_RESOURCE* config_resource, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Open_Connection_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, const FACE_IOSS_Generic_CONNECTION_NAME_TYPE* name, FACE_TIMEOUT_TYPE timeout, FACE_IOSS_CONNECTION_HANDLE_TYPE* handle, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Close_Connection_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_RETURN_CODE_TYPE* return_code);
#define FACE_IOSS_Generic_IO_Service_IGNORE_RECEIVED_TIME ((FACE_SYSTEM_TIME_TYPE)0)

/* Struct FACE_IOSS_Generic_IO_Service_READ_PAYLOAD_TYPE Begin */
typedef struct FACE_IOSS_Generic_IO_Service_READ_PAYLOAD_TYPE {
  FACE_SYSTEM_TIME_TYPE received_time;
  FACE_IOSS_Generic_ReadWriteBuffer payload;
} FACE_IOSS_Generic_IO_Service_READ_PAYLOAD_TYPE;
/* Struct FACE_IOSS_Generic_IO_Service_READ_PAYLOAD_TYPE End */
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Read_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_TIMEOUT_TYPE timeout, FACE_IOSS_Generic_IO_Service_READ_PAYLOAD_TYPE* payload, FACE_RETURN_CODE_TYPE* return_code);

/* Struct FACE_IOSS_Generic_IO_Service_WRITE_PAYLOAD_TYPE Begin */
typedef struct FACE_IOSS_Generic_IO_Service_WRITE_PAYLOAD_TYPE {
  FACE_IOSS_Generic_ReadWriteBuffer payload;
} FACE_IOSS_Generic_IO_Service_WRITE_PAYLOAD_TYPE;
/* Struct FACE_IOSS_Generic_IO_Service_WRITE_PAYLOAD_TYPE End */
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Write_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_TIMEOUT_TYPE timeout, const FACE_IOSS_Generic_IO_Service_WRITE_PAYLOAD_TYPE* payload, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Configure_Connection_Parameters_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_TIMEOUT_TYPE timeout, const FACE_IOSS_Generic_IO_PARAMETER_TRANSACTION_TYPE* parameters, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Get_Connection_Configuration_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_TIMEOUT_TYPE timeout, FACE_IOSS_Generic_IO_PARAMETER_TRANSACTION_TYPE* parameters, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Configure_Bus_Parameters_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_TIMEOUT_TYPE timeout, const FACE_IOSS_Generic_IO_PARAMETER_TRANSACTION_TYPE* parameters, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Get_Bus_Configuration_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_TIMEOUT_TYPE timeout, FACE_IOSS_Generic_IO_PARAMETER_TRANSACTION_TYPE* parameters, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Get_Connection_Status_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_IOSS_Generic_CONNECTION_STATUS_TYPE* status, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Get_Bus_Status_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_IOSS_BUS_STATUS_TYPE* status, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Register_Notification_Event_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_IOSS_Generic_IO_Callback* io_callback, FACE_RETURN_CODE_TYPE* return_code);
typedef FACE_interface_return (*FACE_IOSS_Generic_IO_Service_Unregister_Notification_Event_t)(struct FACE_IOSS_Generic_IO_Service* this_obj, FACE_IOSS_CONNECTION_HANDLE_TYPE handle, FACE_RETURN_CODE_TYPE* return_code);

typedef struct FACE_IOSS_Generic_IO_Service_ops {
  FACE_IOSS_Generic_IO_Service_ctor_t ctor;
  FACE_IOSS_Generic_IO_Service_dtor_t dtor;
  
  // 2. operations table struct members corresponding to the operations
  FACE_IOSS_Generic_IO_Service_Initialize_t Initialize;
  FACE_IOSS_Generic_IO_Service_Open_Connection_t Open_Connection;
  FACE_IOSS_Generic_IO_Service_Close_Connection_t Close_Connection;
  FACE_IOSS_Generic_IO_Service_Read_t Read;
  FACE_IOSS_Generic_IO_Service_Write_t Write;
  FACE_IOSS_Generic_IO_Service_Configure_Connection_Parameters_t Configure_Connection_Parameters;
  FACE_IOSS_Generic_IO_Service_Get_Connection_Configuration_t Get_Connection_Configuration;
  FACE_IOSS_Generic_IO_Service_Configure_Bus_Parameters_t Configure_Bus_Parameters;
  FACE_IOSS_Generic_IO_Service_Get_Bus_Configuration_t Get_Bus_Configuration;
  FACE_IOSS_Generic_IO_Service_Get_Connection_Status_t Get_Connection_Status;
  FACE_IOSS_Generic_IO_Service_Get_Bus_Status_t Get_Bus_Status;
  FACE_IOSS_Generic_IO_Service_Register_Notification_Event_t Register_Notification_Event;
  FACE_IOSS_Generic_IO_Service_Unregister_Notification_Event_t Unregister_Notification_Event;
} FACE_IOSS_Generic_IO_Service_ops;

typedef struct FACE_IOSS_Generic_IO_Service {
  FACE_IOSS_Generic_IO_Service_ops ops;
  void* data;
} FACE_IOSS_Generic_IO_Service;

#define FACE_IOSS_Generic_IO_Service_ctor(_this_obj) \
  ((_this_obj)->ops.ctor)((_this_obj))
#define FACE_IOSS_Generic_IO_Service_dtor(_this_obj) \
  ((_this_obj)->ops.dtor)((_this_obj))

// 3. Macros corresponding to the operations
#define FACE_IOSS_Generic_IO_Service_Initialize(_this_obj, _config_resource, _return_code) \
  ((_this_obj)->ops.Initialize)((_this_obj), (_config_resource), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Open_Connection(_this_obj, _name, _timeout, _handle, _return_code) \
  ((_this_obj)->ops.Open_Connection)((_this_obj), (_name), (_timeout), (_handle), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Close_Connection(_this_obj, _handle, _return_code) \
  ((_this_obj)->ops.Close_Connection)((_this_obj), (_handle), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Read(_this_obj, _handle, _timeout, _payload, _return_code) \
  ((_this_obj)->ops.Read)((_this_obj), (_handle), (_timeout), (_payload), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Write(_this_obj, _handle, _timeout, _payload, _return_code) \
  ((_this_obj)->ops.Write)((_this_obj), (_handle), (_timeout), (_payload), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Configure_Connection_Parameters(_this_obj, _handle, _timeout, _parameters, _return_code) \
  ((_this_obj)->ops.Configure_Connection_Parameters)((_this_obj), (_handle), (_timeout), (_parameters), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Get_Connection_Configuration(_this_obj, _handle, _timeout, _parameters, _return_code) \
  ((_this_obj)->ops.Get_Connection_Configuration)((_this_obj), (_handle), (_timeout), (_parameters), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Configure_Bus_Parameters(_this_obj, _handle, _timeout, _parameters, _return_code) \
  ((_this_obj)->ops.Configure_Bus_Parameters)((_this_obj), (_handle), (_timeout), (_parameters), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Get_Bus_Configuration(_this_obj, _handle, _timeout, _parameters, _return_code) \
  ((_this_obj)->ops.Get_Bus_Configuration)((_this_obj), (_handle), (_timeout), (_parameters), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Get_Connection_Status(_this_obj, _handle, _status, _return_code) \
  ((_this_obj)->ops.Get_Connection_Status)((_this_obj), (_handle), (_status), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Get_Bus_Status(_this_obj, _handle, _status, _return_code) \
  ((_this_obj)->ops.Get_Bus_Status)((_this_obj), (_handle), (_status), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Register_Notification_Event(_this_obj, _handle, _io_callback, _return_code) \
  ((_this_obj)->ops.Register_Notification_Event)((_this_obj), (_handle), (_io_callback), (_return_code))

#define FACE_IOSS_Generic_IO_Service_Unregister_Notification_Event(_this_obj, _handle, _return_code) \
  ((_this_obj)->ops.Unregister_Notification_Event)((_this_obj), (_handle), (_return_code))

/* Interface FACE_IOSS_Generic_IO_Service End */


#endif // _FACE_IOSS_GENERIC_H
